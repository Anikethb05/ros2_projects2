<?xml version="1.0"?>
<robot>

    <!-- Gazebo Material and Friction for Base Link -->
    <gazebo reference="base_link">
        <mu1>0.2</mu1>
        <mu2>0.2</mu2>
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- Gazebo Material and Friction for Left Wheel -->
    <gazebo reference="left_wheel">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- Gazebo Material and Friction for Right Wheel -->
    <gazebo reference="right_wheel">
        <mu1>1.0</mu1>
        <mu2>1.0</mu2>
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- Gazebo Material and Friction for Caster Wheel -->
    <gazebo reference="caster_wheel">
        <mu1>0.01</mu1>
        <mu2>0.01</mu2>
        <material>Gazebo/Red</material>
    </gazebo>

    <!-- Gazebo Material and Friction for Camera Link -->
    <gazebo reference="camera_link">
        <mu1>0.00001</mu1>
        <mu2>0.00001</mu2>
        <material>Gazebo/Yellow</material>
    </gazebo>

    <!-- Gazebo Material and Friction for LIDAR Link -->
    <gazebo reference="lidar_link">
        <mu1>0.00001</mu1>
        <mu2>0.00001</mu2>
        <material>Gazebo/Black</material>
    </gazebo>

    <!-- Gazebo Material and Friction for IMU Link -->
    <gazebo reference="imu_link">
        <mu1>0.00001</mu1>
        <mu2>0.00001</mu2>
        <material>Gazebo/White</material>
    </gazebo>

    <!-- Camera Sensor Plugin -->
    <gazebo reference="camera_link">
        <sensor name="my_camera" type="camera">
            <pose>0 0 0 0 0 0</pose>
            <update_rate>30</update_rate>
            <visualize>true</visualize>
            <camera>
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>640</width>
                    <height>480</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.1</near>
                    <far>100</far>
                </clip>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <ros>
                    <namespace>/gesture_arm/camera</namespace>
                    <remapping>image_raw:=image_raw</remapping>
                    <remapping>camera_info:=camera_info</remapping>
                </ros>
                <camera_name>my_camera</camera_name>
                <frame_name>camera_link_optical</frame_name>
                <hack_baseline>0.0</hack_baseline>
                <distortion_k1>0.0</distortion_k1>
                <distortion_k2>0.0</distortion_k2>
                <distortion_k3>0.0</distortion_k3>
                <distortion_t1>0.0</distortion_t1>
                <distortion_t2>0.0</distortion_t2>
            </plugin>
        </sensor>
    </gazebo>

    <!-- LIDAR Plugin (Unchanged) -->
    <gazebo reference="lidar_link">
        <sensor name="lidar" type="ray">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.14159</min_angle>
                        <max_angle>3.14159</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>2</max>
                    <resolution>0.01</resolution>
                </range>
            </ray>
            <plugin name="laser" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <namespace>/gesture_arm</namespace>
                    <remapping>~/out:=scan</remapping>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <!-- IMU Sensor Plugin -->
     <!-- Add this section to your robo.gazebo file -->

<!-- IMU Sensor -->
<gazebo reference="imu_link">
  <material>Gazebo/Green</material>
  <sensor name="imu_sensor" type="imu">
    <always_on>true</always_on>
    <update_rate>100</update_rate>
    <imu>
      <noise>
        <type>gaussian</type>
        <!-- Rate noise -->
        <rate>
          <mean>0.0</mean>
          <stddev>0.0002</stddev>
          <bias_mean>0.0000075</bias_mean>
          <bias_stddev>0.0000008</bias_stddev>
        </rate>
        <!-- Acceleration noise -->
        <accel>
          <mean>0.0</mean>
          <stddev>0.017</stddev>
          <bias_mean>0.1</bias_mean>
          <bias_stddev>0.001</bias_stddev>
        </accel>
      </noise>
    </imu>
    <plugin name="gazebo_ros_imu" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=imu/data</remapping>
      </ros>
      <frame_name>imu_link</frame_name>
      <initial_orientation_as_reference>false</initial_orientation_as_reference>
    </plugin>
  </sensor>
</gazebo>

    <!-- Differential Drive Controller Plugin -->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <updateRate>10</updateRate>
            <num_wheel_pairs>1</num_wheel_pairs>
            <left_joint>base_left_wheel_joint</left_joint>
            <right_joint>base_right_wheel_joint</right_joint>
            <wheel_separation>0.6</wheel_separation>
            <wheel_diameter>${2*wheel_radius}</wheel_diameter>
            <max_wheel_acceleration>1.0</max_wheel_acceleration>
            <max_wheel_torque>100</max_wheel_torque>
            <odometry_frame>odom</odometry_frame>
            <robot_base_frame>base_footprint</robot_base_frame>
            <publish_wheel_tf>true</publish_wheel_tf>
            <publish_odom>true</publish_odom>
            <publish_odom_tf>true</publish_odom_tf>
            <publish_wheel_joint_state>true</publish_wheel_joint_state>
        </plugin>
    </gazebo>

    <!-- Joint State Publisher Plugin -->
    <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>10</update_rate>
            <joint_name>base_left_wheel_joint</joint_name>
            <joint_name>base_right_wheel_joint</joint_name>
        </plugin>
    </gazebo>

</robot>